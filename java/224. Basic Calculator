/ 如果遇到了数字，由于可能是个多位数，所以我们要用while循环把之后的数字都读进来，然后用sign*num来更新结果res；
// 如果遇到了加号，则sign赋为1，如果遇到了符号，则赋为-1；
// 如果遇到了左括号，则把当前结果res和符号sign压入栈，res重置为0，sign重置为1；
// 如果遇到了右括号，结果res乘以栈顶的符号，栈顶元素出栈，结果res加上栈顶的数字，栈顶元素出栈。

class Solution {
    public int calculate(String s) {
        int len = s.length();
        int res = 0;
        int sign = 1;
        int num = 0;
        Stack<Integer> stack = new Stack<>();
            
        for (int i = 0; i < len; i++) {
            char c = s.charAt(i);
            if (isDigit(c)) {
                num = num * 10 + c - '0';
            } else if (c == '+' || c =='-') {
                res += num * sign;
                sign = (c =='+'? 1 : -1);
                num = 0;
            } else if (c =='(') {
                stack.push(res);
                stack.push(sign);
                res = 0;
                num = 0;
                sign = 1;
            } else if (c == ')') {
                res += num * sign;
                num = 0;
                res *= stack.pop();
                res += stack.pop();
            }
        } 
        res += sign * num;
        return res;
    }
    
    
    boolean isDigit(char c) {
        if(c >= '0' && c <='9') {
            return true;
        }
        return false;
    }
}
            
